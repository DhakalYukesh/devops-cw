name: "Deploy to EC2 Instance"

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SERVER_IP: ${{ vars.SERVER_IP }}

    steps:
      - uses: actions/checkout@v3

      - name: "Build Docker Image"
        run: |
          docker login -u yukeshdhakal -p $DOCKERHUB_PAT
          docker build -t yukeshdhakal/devopscw .
          docker push yukeshdhakal/devopscw
        env:
          DOCKERHUB_PAT: ${{ secrets.DOCKERHUB_PAT }}

      - name: "Configure SSH"
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
          touch ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: "Setup SSH Key for Server Access"
        run: |
          # Decode key with extra error checking
          echo "$SSH_KEY64" | base64 -d > ssh_key.pem || { echo "Base64 decoding failed!"; exit 1; }
          chmod 400 ssh_key.pem
          ls -la ssh_key.pem
          file ssh_key.pem
          # Better key validation that shows actual content
          echo "First 4 lines of key (checking format):"
          head -n 4 ssh_key.pem | cat -A
        env:
          SSH_KEY64: ${{ secrets.SSH_KEY64 }}

      - name: "Test SSH Connection"
        run: |
          # Add extensive debugging
          echo "Connecting to $SERVER_IP..."
          ssh -v -o StrictHostKeyChecking=no -o ConnectTimeout=10 ubuntu@$SERVER_IP -i ssh_key.pem 'echo "Connection successful"'

      - name: "Docker Pull and Restart Docker"
        run: |
          ssh ubuntu@$SERVER_IP -i ssh_key.pem 'docker pull yukeshdhakal/devopscw'
          ssh ubuntu@$SERVER_IP -i ssh_key.pem 'docker stop yukesh-front || true'
          ssh ubuntu@$SERVER_IP -i ssh_key.pem 'docker rm yukesh-front || true'
          ssh ubuntu@$SERVER_IP -i ssh_key.pem 'docker run --name yukesh-front -p 80:80 -d yukeshdhakal/devopscw'
